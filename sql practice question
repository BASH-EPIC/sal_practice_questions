-- Case Study Questions

--1) Which product has the highest price? Only return a single row.
SELECT P.product_id, MAX(P.price) AS highest_price
FROM products P
GROUP BY P.product_id
ORDER BY highest_price DESC 
limit 1;


--2) Which customer has made the most orders?
SELECT C.customer_id,C.first_name,C.last_name
FROM customers C
INNER JOIN orders O ON C.customer_id = O.customer_id
GROUP BY C.customer_id,C.first_name,C.last_name
ORDER BY count(O.customer_id) DESC 
limit 1;

--3) What’s the total revenue per product?
SELECT p.product_id, p.price, sum(p.price * oi.quantity) as Revenue 
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY p.product_id, p.price
ORDER BY Revenue
limit 1;


--4) Find the day with the highest revenue.
SELECT  o.order_date, sum(oi.quantity * p.price) as revenue
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id
JOIN products o ON oi.product_id = p.product_id
GROUP BY  o.order_date
ORDER BY revenue
limit 1;

--5) Find the first order (by date) for each customer.
SELECT o.customer_id, min(o.order_date) AS first_order
FROM orders o
GROUP BY customer_id;

--6) Find the top 3 customers who have ordered the most distinct products
select c.customer_id, c.first_name, c.last_name,Count( Distinct(oi.product_id))as Top
from customers c 
join orders o ON c.customer_id = c.customer_id
Join order_items oi ON product_id = product_id
group by c.customer_id,c.first_name, c.last_name
ORDER BY Top DESC
Limit 5;

--7) Which product has been bought the least in terms of quantity?
SELECT p.product_name, p.price, MIN(oi.quantity) AS min_quantity
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY p.product_name, p.price
ORDER BY min_quantity
LIMIT 1;


--8) What is the median order total?
WITH order_totals AS (
  SELECT o.order_id, SUM(p.price * oi.quantity) AS order_total
  FROM orders o
  JOIN order_items oi ON o.order_id = oi.order_id
  JOIN products p ON oi.product_id = p.product_id
  GROUP BY o.order_id
)
SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY order_total) AS median_order_total
FROM order_totals

--9) For each order, determine if it was ‘Expensive’ (total over 300), ‘Affordable’ (total over 100), or ‘Cheap’.

select oi.order_id, sum	(oi.quantity * p.price) as total_amount,
  case
    sum(when total_amount) > 300 THEN 'Expensive'
    sum( when total_amount) > 100 THEN 'Affordable'
      Else 'Cheap'
     END AS order_category
from order_items oi
join products p ON oi.product_id = p.product_id
group by oi.order_id

--10) Find customers who have ordered the product with the highest price.

SELECT c.customer_id, c.first_name, c.last_name, MAX(p.price) AS highest
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_items oi ON o.order_id = oi.order_id
JOIN products p ON oi.product_id = p.product_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY highest DESC
LIMIT 5;

group by 
